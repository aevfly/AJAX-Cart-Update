<?php

use Drupal\Core\StringTranslation\StringTranslationTrait;
use Drupal\Core\DrupalKernel;
use Drupal\Core\StringTranslation\TranslatableMarkup;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Routing\RouteMatchInterface;
 
/**
 * Implements hook_page_attachments().
 */
function ajax_cart_update_page_attachments(array &$attachments) {
  // Attach translations to drupalSettings.
  $translations = [
    'items' => new TranslatableMarkup('items', [], ['context' => 'Cart block item count']),
    'x' => new TranslatableMarkup('x', [], ['context' => 'Cart block quantity separator']),
  ];

  $attachments['#attached']['drupalSettings']['ajaxCartUpdate']['translations'] = $translations;
}

/**
 * Implements hook_help().
 */
function ajax_cart_update_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.ajax_cart_update':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('The Ajax Cart Update module provides an AJAX-based update for the Commerce cart form.') . '</p>';
      return $output;
  }
}

/**
 * Implements hook_form_alter().
 */
function ajax_cart_update_form_alter(&$form, FormStateInterface $form_state, $form_id) {
    if (strpos($form_id, 'views_form_commerce_cart_form') === 0) {
      // Remove the submit button to enforce AJAX updates.
      unset($form['actions']['submit']);
      // Ensure the button with name 'edit-submit' is removed.
      if (isset($form['actions']['submit']['#name']) && $form['actions']['submit']['#name'] === 'edit-submit') {
        unset($form['actions']['submit']);
      }
    }
}

/**
 * Implements hook_preprocess_page().
 *
 * Attaches the appropriate AJAX cart library to the cart page based on the update method.
 *
 * @param array &$variables
 *   An array of variables to pass to the theme template.
 */
function ajax_cart_update_preprocess_page(array &$variables): void {
  $current_path = \Drupal::service('path.current')->getPath();
  $config = \Drupal::config('ajax_cart_update.settings');
  $update_method = $config->get('update_method') ?: 'selectors';

  // Check if the current path matches the cart page (with or without language prefix).
  if (preg_match('#^(/[a-z]{2})?/cart$#', $current_path)) {
    // Attach the appropriate library based on the update method.
    $library = $update_method === 'endpoint' ? 'ajax_cart_update/ajax_cart_endpoint' : 'ajax_cart_update/ajax_cart_selectors';
    $variables['#attached']['library'][] = 'core/once';
    $variables['#attached']['library'][] = $library;
  }
}

/**
 * Implements hook_preprocess_views_view().
 *
 * Extracts selectors from the Commerce cart form render array and passes them to JS.
 *
 * @param array &$variables
 *   An array of variables to pass to the view template.
 */
function ajax_cart_update_preprocess_views_view(array &$variables): void {
  $view = $variables['view'];

  if ($view->id() !== 'commerce_cart_form' || $view->current_display !== 'default') {
    return;
  }
  
  $style_plugin = $view->style_plugin->getPluginId();
  $config = \Drupal::config('ajax_cart_update.settings');
  $update_method = $config->get('update_method') ?: 'selectors';
 
  
$selectors = [
  'total_price_number' => '.cart-form .views-field-total-price__number .field-content',
  'order_total_summary' => '[data-drupal-selector="order-total-summary"]',
  'order_total' => '.order-total-line__total .order-total-line-value',
  'order_subtotal' => '.order-total-line__subtotal .order-total-line-value',
  'cart_block_summary_count' => '.cart-block--summary__count',
  'cart_block_quantity' => '.cart--cart-block .views-field-quantity',
  'cart_block_price' => '.cart--cart-block .views-field-total-price__number .field-content',
  'cart_block_title' => '.cart--cart-block .views-field-title',
];

  // Only process selectors if the update method is 'selectors'.
  if ($view->id() === 'commerce_cart_form') {

    // Динамічні селектори залежно від стилю.
    switch ($style_plugin) {
      case 'table':
        // Для таблиці використовуємо <td> з класами Views.
        $selectors['total_price_number'] = '.cart-form td.views-field-total-price__number';
        $selectors['cart_block_price'] = '.cart--cart-block .views-field-total-price__number';
        break;

      case 'grid':
        $selectors += [];
        break;

      case 'html_list':
        $selectors += [];
        break;

    }
 
    // Pass selectors and update method to JavaScript via drupalSettings.
    $variables['#attached']['drupalSettings']['ajaxCartUpdate'] = [
      'selectors' => $selectors,
      'updateMethod' => $update_method,
    ];
  } elseif ($view->id() === 'commerce_cart_form') {
    // Pass update method even if selectors are not used.
    $variables['#attached']['drupalSettings']['ajaxCartUpdate'] = [
      'updateMethod' => $update_method,
    ];
  }
}
